(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{205:function(t,e,i){"use strict";i.r(e);var s=i(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[t._v("一开始项目初衷是为了写一个增强版本的Swagger 前端UI,但是随着项目的发展,面对越来越多的个性化需求,不得不编写后端Java代码以满足新的需求,在swagger-bootstrap-ui的1.8.5~1.9.6版本之间,采用的是后端Java代码和Ui都混合在一个Jar包里面的方式提供给开发者使用.这种方式虽说对于集成swagger来说很方便,只需要引入jar包即可,但是在微服务架构下显得有些臃肿。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),i("p",[t._v("后端Java代码和ui包分离为多个模块的jar包,以面对在目前微服务架构下,更加方便的使用增强文档注解(使用SpringCloud微服务项目,只需要在网关层集成UI的jar包即可,因此分离前后端)")]),t._v(" "),t._m(4),t._v(" "),i("p",[t._v("由于更名给大家带来的不便深表歉意~！")]),t._v(" "),i("comment-comment")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"项目背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目背景","aria-hidden":"true"}},[this._v("#")]),this._v(" 项目背景")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因此,项目正式更名为"),e("strong",[this._v("knife4j")]),this._v(",取名knife4j是希望她能像一把匕首一样小巧,轻量,并且功能强悍,更名也是希望把她做成一个为Swagger接口文档服务的通用性解决方案,不仅仅只是专注于前端Ui前端.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("swagger-bootstrap-ui的所有特性都会集中在"),e("code",[this._v("knife4j-spring-ui")]),this._v("包中,并且后续也会满足开发者更多的个性化需求.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("主要的变化是,项目的相关类包路径更换为"),e("code",[this._v("com.github.xiaoymin.knife4j")]),this._v("前缀,开发者使用增强注解时需要替换包路径")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("knife4j")]),this._v("沿用swagger-bootstrap-ui的版本号,第1个版本从1.9.6开始,关于使用方法,请参考文档")])}],!1,null,null,null);e.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{169:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("在静态部署预览Swagger JSON章节中我们已经讲过如何通过nginx来部署静态文件预览文档，但此时我们会发现存在一个问题，即无法进行接口的调试。")]),t._v(" "),n("p",[t._v("我们借助于nginx的反向代理功能,帮助我们实现接口的调试功能")]),t._v(" "),n("p",[t._v("假设还是提供静态JSON的方式,我们只需要在nginx的配置节点中添加一层location即可")]),t._v(" "),n("p",[t._v("如下：")]),t._v(" "),t._m(1),n("p",[t._v("通过以上配置,我们即可预览及调试我们的接口文档")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("那或许我们可以换一种方式,我们将该服务下的所有接口理解为一个服务,我们给一个服务取一个特点的名称,然后通过聚合服务的方式,将文档聚合显示出来,这样既可进行调试")]),t._v(" "),n("p",[t._v("例如：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("nginx配置：")]),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),n("p",[t._v("此时,我们的Swagger的JSON路径地址,我们也可以使用我们服务提供给我们的接口地址，只需要加上为服务名称,分组名称即可得到该服务的Swagger JSON文件")]),t._v(" "),t._m(11),t._v(" "),n("p",[t._v("效果如下：")]),t._v(" "),t._m(12),t._v(" "),n("comment-comment")],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"基于nginx反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于nginx反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 基于Nginx反向代理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("server {\n        listen       18001;\n        server_name  192.168.0.112;\n        #charset koi8-r;\n\n        location / {\n            root /mnt/application/swagger-static;\n        }\n        location /api/ {\n        \t// Swagger JSON文件中所有以api开头的接口全部走8999的代理\n            proxy_pass http://127.0.0.1:8999/api/;\n            client_max_body_size   200m;\n        }\n\n    }\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("但是")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们又会发现问题,很多时候,我们所写的接口可能并不规范,并非所有的接口都是以/api开头的,或者以固定的其他格式开头的接口,那此时如果我们以上面的配置方式来配置,当我们的接口以"),s("code",[this._v("/admin/test")]),this._v("这种形式出现时,我们就无法调试该接口")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("将"),s("code",[this._v("127.0.0.1:8999")]),this._v("理解为"),s("code",[this._v("service1")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们在访问该服务的接口时加上服务前缀："),s("code",[this._v("/service1/api/xxx")]),this._v(",此时,不管我们的接口又多么不规范,只要是service1下的接口,nginx都会将它转发到"),s("code",[this._v("127.0.0.1:8999")]),this._v("这台服务上,这样我们也完成了接口的调试")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18001")]),t._v(";\n        server_name  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v("."),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.112")]),t._v(";\n        #charset koi"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("-r;\n\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root /mnt/application/swagger-static;\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        location /service"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//127.0.0.1:8999/;")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tlocation /service"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//127.0.0.1:8998/;")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("很显然,通过以上配置,最终能达到我们的预期,但是在我们的文档界面中,没有"),s("code",[this._v("service1")]),this._v("这样的basePath属性供我们配置,此时,我们应该如何处理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("针对这种情况，"),s("code",[this._v("swagger-bootstrap-ui")]),this._v("在分组属性中,扩展了一个"),s("code",[this._v("basePath")]),this._v("属性值")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("此时，我们的"),s("code",[this._v("group.json")]),this._v("文件如下：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"微服务-用户模块"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service1/v2/api-docs?group=分组接口"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"swaggerVersion"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service1/v2/api-docs?group=分组接口"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"basePath"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service1"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"微服务-订单模块"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service2/v2/api-docs?group=默认接口"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"swaggerVersion"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service2/v2/api-docs?group=默认接口"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"basePath"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service2"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("通过这种方式,我们可以在"),s("code",[this._v("group.json")]),this._v("文件中聚合所有后端的Swagger服务接口,最终一致输出显示")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"/images/front-1.png",alt:""}})])}],!1,null,null,null);s.default=e.exports}}]);
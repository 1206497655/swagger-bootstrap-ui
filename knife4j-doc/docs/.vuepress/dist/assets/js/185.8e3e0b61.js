(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{206:function(t,e,i){"use strict";i.r(e);var n=i(0),s=Object(n.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),i("p",[t._v("主要是页面的交互方式进行了重写,但是解析Swagger的核心JS并没有做多少改动,源码在"),i("a",{attrs:{href:"https://gitee.com/xiaoym/knife4j",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/xiaoym/knife4j"),i("OutboundLink")],1),t._v("的"),i("code",[t._v("knife4j-vue")]),t._v("模块中")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),i("comment-comment")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"前言-说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言-说明","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言-说明")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Knife4j")]),this._v("从开源至今,都是提供的基于Java+Spring技术栈的jar包方式供Java开发人员方便使用,特别是和"),e("code",[this._v("Springfox-Swagger2")]),this._v("组件深度绑定的一个工具")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Springfox-Swagger2")]),this._v("是一个将Spring MVC、Spring Boot等技术框架提供的开发API接口根据Swagger的V2结构定义,最终将我们所写的Rest接口代码解析成Swagger的V2结构json的工具框架")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("同时他也提供了"),e("code",[this._v("springfox-swagger-ui")]),this._v("这个前端Ui包,这就是我们目前大家目前较熟悉的在用的Swagger界面,如下图：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/knife4j/images/knife4j/swagger-ui.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("随着"),e("code",[this._v("Knife4j")]),this._v("的发展,越来越多的开发者们也关注到了"),e("code",[this._v("Knife4j")]),this._v(",在QQ群交流中,也和同行们进行了深入的交流,对knife4j的结构进行了详细的阐述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("但是,一直没有形成统一的文章或博客,因此,将在和同行的沟通情况整理成博客,供有需要的开发者参考,希望能对使用"),e("code",[this._v("Knife4j")]),this._v("的开发者们一些启发和帮助")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所以,本篇博客主要从目前"),e("code",[this._v("Knife4j")]),this._v("在开发的版本中如何改造或者是直接使用非Java技术栈的方式,实现"),e("code",[this._v("Knife4j")]),this._v("对Swagger的结构渲染")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Knife4j")]),this._v("自"),e("code",[this._v("2.0.0")]),this._v("版本开始,为了适应当前的技术发展(ps:学习新技术中...),同时也是为了在后面的发展中能更好的扩展,基于前端技术栈Vue+Antd Vue版进行了重写")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所以,接下来的篇章将会详解介绍"),e("code",[this._v("knife4j")]),this._v("的源码结构、解析过程、如果构造自己的front版本等等")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("如果你嫌麻烦,在看完了后面的文章介绍后,可以直接使用"),e("code",[this._v("knife4j-front")]),this._v("模块,不管是基于IIS或者Nginx,按照文档上的说明即可")])}],!1,null,null,null);e.default=s.exports}}]);